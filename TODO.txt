# Weekly Priorities

Week 1: Need a chapter on Rubin Causal Model. That should be the title. Use https://en.wikipedia.org/wiki/Rubin_causal_model for starters. We can use all this text, both because it is CC and because I wrote it. Other concepts which should be mentioned (in whatever order you think best):

internal/external validity
Hawthorne effect
confounding
survey sampling
randomized trials
average treatment effect
the assignment mechanism
the perfect doctor
selection bias

There is no need for any R code. We are just explaining things. No need, this pass, for any real data. Just use the fake data from Wikipedia page.

Week 2: Fix 15-Shiny.Rmd so that it is formatted as Rmd rather than LaTeX. That is, \section*{About This Guide} should be ## About Thus Guide, and so on.

Week 2: Chapter "Maps". Self-contained introduction to mapping. Only uses geom_sf(). Check out DataCamp assignment on maps, although I think we will only be doing the first chapter from now on. No raster. Maybe use: [Andrew Tran](https://github.com/andrewbtran/NICAR-2019-mapping). This chapter is important because there is no simple, modern self-contained introduction to mapping that I can find. And lots of students will want to use maps in their final project. But this does need to be simple since students will be going through it during week 4. Can we get students using tidycensus? https://walkerke.github.io/tidycensus/articles/spatial-data.html Maybe this should form the core of our examples? Maybe we introduce the tidycensus package the week before in the syllabus? For purposes of this chapter, you may assume that students already understand tidycensus.

Week 3: Turn this post https://www.jessemaegan.com/post/so-you-ve-been-asked-to-make-a-reprex/ into a short chapter. Also need stuff from here: https://community.rstudio.com/t/best-practices-how-to-prepare-your-own-data-for-use-in-a-reprex-if-you-can-t-or-don-t-know-how-to-reproduce-a-problem-with-a-built-in-dataset/5346. And here: https://cran.r-project.org/web/packages/datapasta/vignettes/how-to-datapasta.html. I have never used datapasta, but it looks cool. Also, advice about how to Google (like include R and tidyverse in your question) and what links are high quality. 

Week 4: Chapter on Programming, which begins with list columns and only covers some of the key concepts from purrr. Does such a chapter really merit the title "prgramming"? I am not sure. But let's start with it. Chapter flow for semester will be: Functions, Probability, Programming, Bayes. We already have three of these. Start problem set 5, question 5 from last semester. These are the key concepts I want students to have. Steal that example for this chapter and walk students slowly through it, with extra backgound information. At the end, show how the use of tibble() to start is a hack which can be replaced with imap. See https://r4ds.had.co.nz/many-models.html for a discussion about list columns. This topic is also difficult, first because we are teaching it in week 5 of the semester. Second, because it is hard! Third, because we only need to understand a subset of its usage --- the part that is useful for simple simulation exercises. R4DS is good: https://r4ds.had.co.nz/iteration.html. Maybe this: https://htmlpreview.github.io/?https://github.com/JoeyBernhardt/stat545-purrr/blob/master/purrr-lesson.html but it is all about extraction when our purrr use is simulation. RStudio Webinar titled "[How to Work with List Columns](https://resources.rstudio.com/webinars/how-to-work-with-list-columns-garrett-grolemund)" by Garrett Grolemund is useful. 

Week 5: Chapter "Animation". Self-contained introduction to animation.  We will only be using gganimate. Start with this introduction: https://www.datanovia.com/en/blog/gganimate-how-to-create-plots-with-beautiful-animation-in-r/. Make sure o cover anim_save() since students need to save their anmations and then deply them to Shiny. The gganimate official page is OK: https://gganimate.com/index.html. The section "Where is my animation?" is definitely important, as is understanding that the default creation is a gif. Should also cover how to post one's gif on Facebook/Twitter/etc.


Week 6: What is the next set of stuff worth covering after students understand the Rubin Causal Model? Good question! I am not even sure what those topics are. Perhaps all the ways we deal with observational data. What sorts of material do other intro books cover? Here are some relevant concepts:

unit/item nonresponse
ignorability
treat potential outcomes as fixed (can we do this with regression?)
missing data
regresssion towards the mean
prediction/classification
map/network/text

When discussing map/network/text data, make sure to link to these blog posts and provide a paragraph of discussion.

Paul Revere [social network](https://kieranhealy.org/blog/archives/2013/06/09/using-metadata-to-find-paul-revere/) 
Federalist Papers [authorship](https://www.hvitfeldt.me/blog/authorship-classification-with-tidymodels-and-textrecipes/)
Lady Tasting Tea


# Other rough topics. 

Don't do anything with these till we talk.

Meld the material on writing functions and purrr with the concepts in the Probability/Bayes Chapters. Maybe functions goes with probability and purrr goes with Bayes? Key point is that students have all this down cold before we dive into Sampling. We are not changing, I think, any of the words in these chapters, most of which are quite good. Instead, we are using these topics as an excuse to provide more lessons in functions/purrr. Edit Bayes chapter to make sense after prob chapter. Consider adding in intuition from Bayes for Beginner Book, especially decision trees, which map nicely to our simulation approach. Add purr material to probability chapter and Bayes chapter. Need to cover this CS stuff before sampling.


=================

# Random Notes and Questions

How to organize? Two choices: Separate directories (like ml/) for different portions of the book, each with their own sub-directories including images and what not. Or a unified approach, with all images in the same directory. Related choice: All chapters at the highest level or broken up into sub-directories.

There are errors with select() calls at the end of the (not-used-yet) ml chapters. This has to do with a library which overloads select. The DS books uses a hack in _common.R to fix this.

Edit Bayes chapter, especially the end.

Remove material from Tell Your Story and place in correct chapter.

I like the PDF version of Rafa's book available from Lean Pub. How hard is that to make?

Spilt up DS productivity chapter

Add discussion of allowed variable names, the use of ``, and janitor::clean_names() early in the book. This is needed as background before we use tidy::broom() and similar functions.

Remove use of get_* speciality ModernDive commands. Replace with broom:tidy() and friends. We should not need library(moderndive) at all. (But need to check on any data used from there.) 

Get rid of use of infer library. Do all this the hard way, via the bootstrap and specific calculation of the test statistic.

Remove all hypothesis testing from MD chapters. Motto: No tests! There is only the data, and models we create from the data, and the decisions we make with those models.

Lots of pandoc-citeproc errors.

Replace all uses of kable with gt?

Fix "No additional resources" in Chapter 6, 7, 10. Standardize this section across all chapters. 545 is different.

Keep chapters 9, 10 and 11 from MD?

Requires internet when using read_mnist() in some DS chapters. Annoying! Fix by including copy of mnist? By getting rid of these sections?

Why isn't preview_chapter() working with MD chapters? Why can't I simply knit one of the MD chapters? Gives weird error message about "Error in files2[[format]] : 
  attempt to select less than one element in get1index"
  

Add Shiny section at end.

Links in STAT 545 not working despite addition of links.md file. How fix?

Split wrangling chapter into two parts: old MD section and new STAT 545 material which covers types of objects, like character and factor.

14/15 after join in chapter 4.

Take (?) material from: https://chabefer.github.io/STCI/; https://github.com/chabefer/SKY

Organize chapters. We want chapters to have a similar length/difficulty. Maybe we also want them to correspond better to specific weeks. Once we have that, rename them with 0X prefixes so that things look nice.

Or should each of these be separate chapters so that we might mix and match things? Maybe we need 100+ chapters, each of which do simple things, largely unconnected to each other.

Add cookie photo to front

Add 545 and DS data download code to chapter 5?

Deal with bibliography. Note that logistic regression chapter has a bunch of entries we need from BYSH.

========= Large Projects

## R Packages

Square away R packages. There should be one location with all the requirements. Here is a listing of the R packages used my MD, from their index.Rmd:

CRAN packages needed: "nycflights13", "ggplot2movies", "fivethirtyeight", "gapminder", "ISLR",tidyverse", "rmarkdown", "knitr", "janitor", "skimr","infer", "moderndive", "webshot", "mvtnorm", "remotes", "devtools", "dygraphs", "gridExtra", "kableExtra", "scales", "viridis", "ggrepel", "patchwork",

But what good is this, given that other packages are loaded elsewhere? Is there some standard way of handling this, perhaps with a DESCRIPTION file? Main annoyance is that new contributors have to try to compile the book a dozen times before it will work.

==
## Set Up Script

Consider the use of before_chapter_script: "_common.R" in the DS _bookdown.yml as well as the associated _common.R file. Is this an approach we should copy? The lack of this why I can't get all the DS chapters to work.

Combine _common.R, common.R and index.Rmd information into one place. Need to figure out how this works in bookdown. I think we need one file which only runs once when you make the book. That files does a bunch of stuff involving copying over files. But you don't maintain state after running that file, so any new functions are lost. Then you have a second file, like _common.R, which is run at the start of compiling each chapter.



  
========= Thoughts

Revisit the Prediction Game. Love this:

“The usual touchstone of whether what someone asserts is mere persuasion or at least a subjective conviction, i.e., firm belief, is betting. Often someone pronounces his propositions with such confident and inflexible defiance that he seems to have entirely laid aside all concern for error. A bet disconcerts him. Sometimes he reveals that he is persuaded enough for one ducat but not for ten. For he would happily bet one, but at 10 he suddenly becomes aware of what he had not previously noticed, namely that it is quite possible that he has erred.”

— Immanuel Kant, Critique of Pure Reason

Broadening Your Statistical Horizons is a very cleanly put together book. We should make our book look like that.
